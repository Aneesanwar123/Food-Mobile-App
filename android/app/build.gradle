plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    compileSdkVersion 33   // Updated to use latest compileSdkVersion
    buildToolsVersion "3.0.0" // Updated to use latest buildToolsVersion

    defaultConfig {
        applicationId "com.example.food_intern"
        minSdkVersion 21 // Updated minSdkVersion
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 33 // Updated targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        // Add comment regarding namespace
        // This is the namespace used for the Android package name. Ensure it matches your package name.
        // Changing it here means it will affect your Android package name. Be cautious while changing it.
        // More info: https://developer.android.com/studio/build/application-id
        namespace "com.example.food_intern"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
